#cloud-config
---
hostname: kube-master
users:
  - name: core
    ssh-authorized-keys: 
      - <SSH_PUBLIC_KEY>
    groups: 
      - sudo
    shell: /bin/bash

write_files:
  - path: /etc/other-environment 
    owner: root
    permissions: 0755
    content: |
 Location of the kubernetes binaries e.g. http(s)://yourserver.net/path/to/files
      KUBERNETES_LOC=<KUBERNETES_LOC>

  - path: /home/core/kubernetes-download.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      # Network not always up, ping to wait for internet connection
      while [[ $(curl --silent  --connect-timeout 2 $KUBERNETES_LOC/test 2>&1>/dev/null ; echo $?) -ne 0 ]] ; do :; sleep 2 ; done
      # Download kubernetes binaries from the following location.
      /usr/bin/wget -N -P "/home/core" "$KUBERNETES_LOC/kubectl"
      /usr/bin/wget -N -P "/home/core" "$KUBERNETES_LOC/kubernetes"
      /usr/bin/wget -N -P "/home/core" "$KUBERNETES_LOC/kube-controller-manager"
      /usr/bin/wget -N -P "/home/core" "$KUBERNETES_LOC/kube-apiserver"
      /usr/bin/wget -N -P "/home/core" "$KUBERNETES_LOC/kube-scheduler"
      sudo chmod +x /home/core/*

  - path: /home/core/calico-node.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      # Usage: calico-node.sh <node ip> 

      # Install necessary kernel modules
      sudo modprobe xt_set
      sudo modprobe ip6_tables
      sudo /home/core/calicoctl checksystem --fix

      # Create a /tmp directory for docker plugins.  We don't actually use docker plugins, 
      # but the default docker directory is in /usr, which fails on CoreOS.
      TEMP_PLUGIN_DIR=`mktemp`
      echo "Using tmp plugin dir ${TEMP_PLUGIN_DIR}"
      
      # Start the Calico node.  Don't need the --kubernetes flag, since the Master does
      # not run the Kubelet.
      sudo ETCD_AUTHORITY=127.0.0.1:4001 /home/core/calicoctl node --ip=$1 --plugin-dir=$TEMP_PLUGIN_DIR


coreos:
  update:
    reboot-strategy: off
  units:
    - name: get-kube-tools.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Installs Kubernetes tools
        After=network-online.service
        [Service]
        EnvironmentFile=/etc/other-environment
        ExecStart=/home/core/kubernetes-download.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: setup-network-environment.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://github.com/kelseyhightower/setup-network-environment/releases/download/v1.0.0/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot

    - name: etcd.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=etcd
        Requires=setup-network-environment.service
        After=setup-network-environment.service

        [Service]
        EnvironmentFile=/etc/network-environment
        EnvironmentFile=/etc/other-environment
        User=etcd
        PermissionsStartOnly=true
        ExecStart=/usr/bin/etcd \
        --name ${DEFAULT_IPV4} \
        --addr ${DEFAULT_IPV4}:4001 \
        --bind-addr 0.0.0.0 \
        --cluster-active-size 1 \
        --data-dir /var/lib/etcd \
        --http-read-timeout 86400 \
        --peer-addr ${DEFAULT_IPV4}:7001 \
        --snapshot true
        Restart=always
        RestartSec=10s

    - name: calico-node.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Start Calico on this node
        Requires=docker.service etcd.service
        After=docker.service setup-network-environment.service etcd.service

        [Service]
        EnvironmentFile=/etc/network-environment
        EnvironmentFile=/etc/other-environment
        User=root
        PermissionsStartOnly=true
        ExecStartPre=-/usr/bin/wget -N -P "/home/core" "https://github.com/Metaswitch/calico-docker/releases/download/v0.5.1/calicoctl"
        ExecStartPre=-chmod +x /home/core/calicoctl
        ExecStart=/home/core/calico-node.sh $DEFAULT_IPV4
        RemainAfterExit=yes
        Type=oneshot

    - name: kube-apiserver.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=etcd.service
        After=etcd.service
        [Service]
        EnvironmentFile=/etc/network-environment
        EnvironmentFile=/etc/other-environment
        ExecStart=/home/core/kube-apiserver \
        --address=0.0.0.0 \
        --port=8080 \
        --service-cluster-ip-range=10.100.0.0/16 \
        --etcd_servers=http://127.0.0.1:4001 \
        --public_address_override=${DEFAULT_IPV4} \
        --logtostderr=true
        Restart=always
        RestartSec=10

    - name: kube-controller-manager.service 
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=etcd.service kube-apiserver.service
        After=etcd.service kube-apiserver.service
        [Service]
        ExecStart=/home/core/kube-controller-manager \
        --master=127.0.0.1:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10

    - name: kube-scheduler.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=etcd.service kube-apiserver.service
        After=etcd.service kube-apiserver.service
        [Service]
        ExecStart=/home/core/kube-scheduler --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
